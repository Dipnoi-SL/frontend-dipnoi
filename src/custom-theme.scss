// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;

// Plus imports for other components in your app.
// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$frontend-dipnoi-primary: mat.define-palette(mat.$cyan-palette, 700);
// $frontend-dipnoi-primary: mat.define-palette(mat.$blue-palette, 500);
$frontend-dipnoi-accent: mat.define-palette(mat.$lime-palette);

// The warn palette is optional.
$frontend-dipnoi-warn: mat.define-palette(mat.$deep-orange-palette);

// This one is not used for theming, only for the custom success class.
$frontend-dipnoi-success: mat.define-palette(mat.$green-palette);

// Define the typography for your theme.
$frontend-dipnoi-typography: mat.define-typography-config();

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$frontend-dipnoi-theme: mat.define-dark-theme(
  (
    color: (
      primary: $frontend-dipnoi-primary,
      accent: $frontend-dipnoi-accent,
      warn: $frontend-dipnoi-warn,
    ),
    typography: $frontend-dipnoi-typography,
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.typography-hierarchy($frontend-dipnoi-theme);
@include mat.all-component-bases($frontend-dipnoi-theme);
@include mat.all-component-typographies($frontend-dipnoi-theme);
@include mat.all-component-densities($frontend-dipnoi-theme);
@include mat.all-component-themes($frontend-dipnoi-theme);

$primary: mat.get-color-from-palette($frontend-dipnoi-primary);
$accent: mat.get-color-from-palette($frontend-dipnoi-accent);
$warn: mat.get-color-from-palette($frontend-dipnoi-warn);
$success: mat.get-color-from-palette($frontend-dipnoi-success);

$headerHeight: 56px;
$footerHeight: 40px;
$sidenavWidth: 260px;

html,
body {
  height: 100%;
}

body {
  margin: 0;
  font-family: Roboto, 'Helvetica Neue', sans-serif;
}

a {
  cursor: pointer;
  color: mat.get-color-from-palette($frontend-dipnoi-primary);
}

app-root {
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.success {
  color: $success;
}

.error {
  color: $warn;
}

mat-sidenav.mat-drawer {
  background-color: unset;
  border-width: 0;
}

mat-sidenav-content.mat-drawer-content {
  background-color: var(--mat-sidenav-container-background-color);
}

a.mdc-list-item:focus::before {
  background-color: unset;
  opacity: unset;
}

a.mdc-list-item:hover::before {
  background-color: $primary;
  opacity: 0.04;
}

mat-card.mat-mdc-card {
  background-color: var(--mat-sidenav-content-background-color);
}

::-webkit-scrollbar {
  background: rgba(0, 0, 0, 0.2);
  height: 8px;
  width: 8px;
}

::-webkit-scrollbar-thumb {
  background: var(--mat-toolbar-container-background-color);
  -webkit-border-radius: 1ex;
  -webkit-box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.75);
}

::-webkit-scrollbar-corner {
  background: #000;
}
